---
import Nav from "../sections/Nav.astro";
import Hero from "../sections/Hero.astro";
import Footer from "../sections/Footer.astro";

const { head, description, image } = Astro.props;
const base = import.meta.env.BASE_URL || "/";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="color-scheme" content="light dark" />
    <meta name="description" content={description || "A calm, minimal gallery of work and memories."} />
    <link rel="canonical" href={`${base}${Astro.url.pathname.replace(/^\//,'')}`} />
    <meta property="og:title" content={head ? `${head} | THE.GALLERY` : "THE.GALLERY"} />
    <meta property="og:description" content={description || "A calm, minimal gallery."} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={`${base}${Astro.url.pathname.replace(/^\//,'')}`} />

    <title>{head ? `${head} | THE.GALLERY` : "THE.GALLERY"}</title>

    <!-- Global Styles -->
    <link rel="stylesheet" href={`${base}styles/theme.css`} />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />

    <!-- Bootstrap JS -->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
      defer
    ></script>

    <!-- Active Nav + Dropdown Highlight -->
    <script defer>
      document.addEventListener("DOMContentLoaded", () => {
        const base = "{base}".replace(/\/$/, ""); // normalize base
        const stripBase = (href) => {
          if (!href) return "/";
          let out = href;
          if (out.startsWith(base)) out = out.slice(base.length);
          out = out.replace(/\/+$/, "");
          return out === "" ? "/" : out;
        };

        const current = stripBase(window.location.pathname);

        document.querySelectorAll(".navbar-nav .nav-link, .dropdown-item").forEach(el => {
          el.classList.remove("active");
          el.removeAttribute("aria-current");
        });

        let matchedChild = false;
        document.querySelectorAll(".dropdown-menu .dropdown-item").forEach(item => {
          const href = stripBase(item.getAttribute("href"));
          if (href === current) {
            matchedChild = true;
            item.classList.add("active");
            item.setAttribute("aria-current", "page");
          }
        });

        if (matchedChild) {
          const toggle = document.querySelector(".nav-item.dropdown > .nav-link.dropdown-toggle");
          if (toggle) toggle.classList.add("active");
        } else {
          document.querySelectorAll(".navbar-nav > .nav-item > .nav-link:not(.dropdown-toggle)").forEach(link => {
            const href = stripBase(link.getAttribute("href"));
            if (href === current) {
              link.classList.add("active");
              link.setAttribute("aria-current", "page");
            }
          });

          if (current.startsWith("/gallery")) {
            const toggle = document.querySelector(".nav-item.dropdown > .nav-link.dropdown-toggle");
            if (toggle) toggle.classList.add("active");
          }
        }
      });

        document.addEventListener("DOMContentLoaded", () => {
    if (window.bootstrap) {
      document.querySelectorAll('[data-bs-toggle="dropdown"]').forEach(el => {
        new bootstrap.Dropdown(el);
      });
    } else {
      console.warn("Bootstrap not found â€“ dropdowns not initialized");
    }
  });
    </script>
  </head>

  <body>
    
    <!-- Navigation -->
     <a class="skip-link" href="#content">Skip to content</a>
    <Nav base={base} />

    <!-- Hero Section -->
    <Hero head={head} description={description} image={image} />

    <!-- Main Page Content -->
    <main id="content" class="py-5 container">
      <slot />
    </main>

    <!-- Footer -->
    <Footer />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" defer></script>
  </body>
</html>

<style>
  .skip-link {
  position: absolute;
  left: -9999px;
  top: auto;
  }
  .skip-link:focus {
    left: 1rem;
    top: 1rem;
    z-index: 9999;
    background: #fff;
    color: #000;
    padding: .5rem .75rem;
    border-radius: .5rem;
  }

</style>
