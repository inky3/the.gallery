---
import Main from '../../layouts/Main.astro';
import Card from '../../components/Card.astro';

const hero = {
  head: "Photography",
  description: "Product, travel, motorsport, daily shots."
};

// filter pills (same style idea as index / projects)
const filters = [
  { key: "all", label: "All" },
  { key: "single", label: "Single" },
  { key: "collection", label: "Collection" },
];

// photo items
const items = [
  {
    title: "Casa Lapin Coffee Bean",
    image: "/img/photography/casa-lapin.jpg",
    category: "single",
    intro: "Packaged เมล็ดกาแฟ คาเฟ่ Casa Lapin โทนอุ่น แสงนุ่ม",
  },
  {
    title: "Porsche 956 Set",
    image: "/img/photography/porsche956/IMG_9504.JPG",
    category: "collection",
    intro: "ภาพ Collection ชุดรถแข่ง Le Mans Porsche 956",
    href: "/the.gallery/gallery/photography/porsche956"
  },
  // example multi-category (optional — shows how to extend)
  // {
  //   title: "Studio Product + Track",
  //   image: "/img/photography/sample.jpg",
  //   category: ["product", "motorsport"],
  //   intro: "Mixed session, studio + paddock.",
  //   href: "#"
  // }
];
---

<Main head={hero.head} description={hero.description}>
  <section class="py-5">
    <div class="container">
      <!-- HEADER -->
      <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center gap-3 mb-4">
        <div>
          <h2 class="mb-1">Photography</h2>
          <p class="text-muted mb-0">Filter by category</p>
        </div>

        <!-- pill-like filter (desktop + mobile) -->
        <div class="pill-filter" id="photoFilterNav">
          {filters.map((f, i) => (
            <button
              type="button"
              class={`pill-btn ${i === 0 ? 'active' : ''}`}
              data-filter={f.key}
            >
              {f.label}
            </button>
          ))}
        </div>

        <!-- ONE mobile-only button (like projects) -->
        <button id="toggleDescriptions" class="desc-btn" type="button">
          View Description
        </button>
      </div>

      <!-- GALLERY -->
      <div class="row g-4" id="gallery">
        {items.map((item) => (
          <Card
            title={item.title}
            image={item.image}
            category={item.category}
            intro={item.intro}
            href={item.href}
          />
        ))}
      </div>
    </div>
  </section>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const nav = document.getElementById("photoFilterNav");
      const cards = document.querySelectorAll(".gallery-card");
      const toggleBtn = document.getElementById("toggleDescriptions");

      // ----- FILTER -----
      if (nav) {
        nav.addEventListener("click", (e) => {
          const el = e.target;
          if (!(el instanceof HTMLElement) || el.tagName !== "BUTTON") return;

          // active state
          nav.querySelectorAll("button").forEach((b) => b.classList.remove("active"));
          el.classList.add("active");

          const filter = (el.dataset.filter || "all").toLowerCase();

          cards.forEach((card) => {
            // card.dataset.category could be "product" or "product,motorsport"
            const raw = (card.dataset.category || "").toLowerCase();
            const parts = raw.split(",").map((p) => p.trim()).filter(Boolean);
            const col = card.closest(".gallery-col");

            const match =
              filter === "all" ||
              parts.includes(filter);

            if (col) col.style.display = match ? "" : "none";
          });
        });
      }

      // ----- MOBILE: single "View Description" -----
      if (toggleBtn) {
        const applyState = (on) => {
          document.querySelectorAll(".card-figure").forEach((fig) => {
            if (on) fig.classList.add("show-info");
            else fig.classList.remove("show-info");
          });
        };

        toggleBtn.addEventListener("click", () => {
          const willShow = !toggleBtn.classList.contains("active");
          toggleBtn.classList.toggle("active", willShow);
          toggleBtn.textContent = willShow ? "Hide Description" : "View Description";
          applyState(willShow);
        });

        // if desktop, just make sure it stays hidden
        const checkWidth = () => {
          if (window.innerWidth > 770) {
            toggleBtn.classList.remove("active");
            toggleBtn.style.display = "none";
            applyState(false);
          } else {
            toggleBtn.style.display = "inline-flex";
          }
        };
        checkWidth();
        window.addEventListener("resize", checkWidth);
      }
    });
  </script>

  <style>
    /* pill filter (same DNA as your projects page) */
    .pill-filter {
      display: inline-flex;
      gap: .35rem;
      background: #f6f7f7;
      border-radius: 999px;
      padding: 0.25rem;
      box-shadow: inset 0 0 0 1px rgba(0,0,0,.04);
      flex-wrap: wrap;
    }
    .pill-btn {
      border: none;
      background: transparent;
      color: #333;
      font-weight: 500;
      padding: 0.45rem 1.2rem;
      border-radius: 999px;
      cursor: pointer;
      transition: all 0.25s ease;
      white-space: nowrap;
    }
    .pill-btn.active {
      background: #0f6657;
      color: #fff;
      box-shadow: 0 1px 3px rgba(0,0,0,.15);
    }
    .pill-btn:hover:not(.active) {
      background: rgba(0,0,0,.04);
    }

    /* mobile-only description toggle (ONE button) */
    .desc-btn {
      background: #f5f5f5;
      border: 1px solid rgba(0,0,0,0.1);
      color: #333;
      border-radius: 999px;
      padding: 0.5rem 1.25rem;
      font-weight: 500;
      transition: all 0.25s ease;
      display: none; /* hidden by default, shown < 770px */
    }
    .desc-btn.active {
      background: #0f6657;
      color: #fff;
      border-color: #0f6657;
    }

    /* show only below 770px */
    @media (max-width: 770px) {
      .desc-btn {
        display: inline-flex;
        align-items: center;
        gap: .3rem;
      }
    }
  </style>
</Main>
